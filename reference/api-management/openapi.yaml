openapi: 3.0.2
info:
  title: API Management
  version: '1.0'
  contact:
    name: Axway Support
    email: support@axway.com
  license:
    name: Copyright Axway 2019. All rights reserved.
  description: APIs for API Management in Amplify Central.
servers:
  - url: 'https://apicentral.axway.com/api/mgmt/v1'
    description: API Central
paths:
  /environments:
    get:
      summary: Get all environments.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Environment'
      description: Get all environments.
      operationId: getEnvironments
      tags:
        - environment
      parameters:
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/countParam'
        - $ref: '#/components/parameters/pageNumberParam'
        - $ref: '#/components/parameters/pageSizeParam'
        - $ref: '#/components/parameters/sortParam'
    post:
      summary: Create an environment.
      responses:
        '201':
          description: Created
          headers:
            location:
              schema:
                type: string
              description: The location of the created environment.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
      tags:
        - environment
      operationId: createEnvironment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Environment'
      description: Create an environment.
  /graphql:
    get:
      summary: GraphQL query endpoint.
      tags:
        - graphql
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                  data:
                    type: object
      description: GraphQL query endpoint.
      parameters:
        - schema:
            type: string
          in: query
          name: query
          description: 'The GraphQL query. See https://graphql.org/learn/serving-over-http/#get-request.'
          required: true
      operationId: queryGraphqlInline
    post:
      summary: GraphQL query endpoint.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                  errors:
                    type: array
                    items:
                      type: object
      description: GraphQL query endpoint.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: string
                operationName:
                  type: string
                variables:
                  type: object
        description: 'The GraphQL query. See https://graphql.org/learn/serving-over-http/#post-request.'
      operationId: queryGraphql
      tags:
        - graphql
  '/environments/{environmentId}':
    parameters:
      - name: environmentId
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get an environment.
      tags:
        - environment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
              examples: {}
        '404':
          description: Not Found
      description: Get an environment.
      operationId: getEnvironment
    put:
      summary: Update an environment.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Environment'
        '404':
          description: Not Found
      description: Update an environment.
      operationId: updateEnvironment
      tags:
        - environment
    delete:
      summary: Delete an environment.
      responses:
        '204':
          description: No Content.
      tags:
        - environment
      operationId: deleteEnvironment
      description: Delete an environment.
components:
  schemas:
    AuditMetadata:
      title: AuditMetadata
      description: Read-only metadata for the record.
      properties:
        createTimestamp:
          type: string
          format: date-time
          description: The creation time.
        createUserId:
          type: string
          description: Id of the user that created the entity.
        modifyTimestamp:
          type: string
          format: date-time
          description: The last modification time.
        modifyUserId:
          type: string
          description: Id of the user that last modified the entity.
      readOnly: true
      type: object
    Environment:
      title: Environment
      description: An environment contains API Services.
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        metadata:
          $ref: '#/components/schemas/AuditMetadata'
        attributes:
          $ref: '#/components/schemas/Attributes'
        description:
          type: string
        icon:
          type: string
        flowVariables:
          $ref: '#/components/schemas/EnvironmentDictionary'
        variables:
          $ref: '#/components/schemas/EnvironmentDictionary'
        tags:
          type: array
          description: List of tags
          items:
            type: string
      required:
        - name
    APIService:
      title: API Service
      description: An API Service describes an API that is consumable.
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        icon:
          type: string
        description:
          type: string
        attributes:
          $ref: '#/components/schemas/Attributes'
        metadata:
          $ref: '#/components/schemas/AuditMetadata'
        tags:
          type: array
          description: List of tags
          items:
            type: string
        definitions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/APIServiceDefinition'
          description: The API Service definitions in this API Service.
    APIServiceDefinition:
      title: API Service Definition
      description: The details of individual releases of an API Service.
      type: object
      properties:
        id:
          type: string
        tags:
          type: array
          description: List of tags
          items:
            type: string
        metadata:
          $ref: '#/components/schemas/AuditMetadata'
        attributes:
          $ref: '#/components/schemas/Attributes'
        description:
          type: string
        name:
          type: string
        endpoint:
          $ref: '#/components/schemas/APIEndpoint'
        proxy: {}
    APIEndpoint:
      title: API Endpoint
      description: A consumable API endpoint description.
      type: object
      properties:
        api:
          oneOf:
            - type: array
              items:
                $ref: '#/components/schemas/APIDefinition'
            - $ref: '#/components/schemas/APIDefinition'
        selector:
          type: object
          properties:
            type:
              type: string
            value: {}
        endpoint:
          oneOf:
            - type: array
              items:
                $ref: '#/components/schemas/Endpoint'
            - $ref: '#/components/schemas/Endpoint'
    APIDefinition:
      title: API Definition
      description: An API definition.
      properties:
        type:
          type: string
        definition:
          oneOf:
            - type: object
            - type: string
      additionalProperties: true
    Endpoint:
      type: object
      description: An endpoint.
      properties:
        host: 
          type: string
        port:
          type: integer
    EnvironmentDictionary:
      title: EnvironmentDictionary
      description: Variables for use in environment substitutions.
      additionalProperties:
        oneOf:
          - type: string
          - type: integer
          - type: boolean
    Attributes:
      title: Attributes
      description: Custom attributes added to objects.
      additionalProperties:
        oneOf:
          - type: string
          - type: integer
          - type: boolean
          - type: array
            items: {}
  securitySchemes:
    scheme_0:
      type: http
      scheme: Bearer
      description: Authenticated platform bearer token.
  parameters:
    offsetParam:
      name: offset
      in: query
      description: The offset index into the result set to start returning results from.
      required: false
      schema:
        type: integer
        default: 0
    countParam:
      name: count
      in: query
      description: The maximum number of entities to return.
      required: false
      schema:
        type: integer
        default: 20
    pageNumberParam:
      name: page
      in: query
      description: 'The offset starting page number in the result set to start returning results from, starts at 1.'
      required: false
      schema:
        type: integer
        default: 1
    pageSizeParam:
      name: pageSize
      in: query
      description: The number of entities allowed in a page.
      required: false
      schema:
        type: integer
        default: 20
    sortParam:
      name: sort
      in: query
      description: 'The field to sort result sets by, in ASC or DESC order.'
      required: false
      schema:
        type: array
        items:
          type: string
